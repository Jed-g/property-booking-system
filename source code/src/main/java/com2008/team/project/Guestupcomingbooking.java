package com2008.team.project;

import java.sql.*;

public class Guestupcomingbooking extends javax.swing.JPanel {

private Boolean hostView = false;

private Main jFrameInstance;
private String email;
private GuestBookingList[] upcomingList;
private GuestBookingList[] searchResults;
private int numberOfPages;
private int currentPage = 1;
private int bookingIndex;


    /**
     * Creates new form NewJPanel
     */
    public Guestupcomingbooking(Main jFrameInstance, String email) {
        initComponents();
        this.jFrameInstance = jFrameInstance;
        this.email = email;
        
        fetchUpcomingData(email);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        hostViewSwitch = new javax.swing.JButton();
        guestSearch = new javax.swing.JButton();
        homePage = new javax.swing.JButton();
        pageNumber = new javax.swing.JLabel();
        lblDates1 = new javax.swing.JTabbedPane();
        proname1 = new javax.swing.JTextField();
        prolocation1 = new javax.swing.JTextField();
        prodates1 = new javax.swing.JTextField();
        viewprop3 = new javax.swing.JButton();
        lblDates3 = new javax.swing.JTabbedPane();
        proname3 = new javax.swing.JTextField();
        prolocation3 = new javax.swing.JTextField();
        prodates3 = new javax.swing.JTextField();
        viewprop1 = new javax.swing.JButton();
        lblDates2 = new javax.swing.JTabbedPane();
        proname2 = new javax.swing.JTextField();
        prolocation2 = new javax.swing.JTextField();
        prodates2 = new javax.swing.JTextField();
        lblDates4 = new javax.swing.JTabbedPane();
        proname4 = new javax.swing.JTextField();
        prolocation4 = new javax.swing.JTextField();
        prodates4 = new javax.swing.JTextField();
        viewprop4 = new javax.swing.JButton();
        viewprop2 = new javax.swing.JButton();
        pastBooking = new javax.swing.JButton();
        upcomingBooking = new javax.swing.JButton();
        accountButton = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        nextPage = new javax.swing.JButton();
        previousPage = new javax.swing.JButton();

        jButton4.setBackground(new java.awt.Color(255, 204, 153));
        jButton4.setText("Search");

        setPreferredSize(new java.awt.Dimension(1024, 576));

        hostViewSwitch.setBackground(new java.awt.Color(255, 204, 204));
        hostViewSwitch.setText("Switch to Host View");
        hostViewSwitch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostViewSwitchActionPerformed(evt);
            }
        });

        guestSearch.setBackground(new java.awt.Color(255, 204, 153));
        guestSearch.setText("Search");
        guestSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guestSearchActionPerformed(evt);
            }
        });

        homePage.setBackground(new java.awt.Color(255, 204, 153));
        homePage.setText("Homepage");
        homePage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homePageActionPerformed(evt);
            }
        });

        pageNumber.setText("[page number]");

        proname1.setText("Property Name");
        proname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proname1ActionPerformed(evt);
            }
        });
        lblDates1.addTab("Accommodation name", proname1);

        prolocation1.setText("Location");
        lblDates1.addTab("Location ", prolocation1);

        prodates1.setText("Date Range");
        lblDates1.addTab("Dates", prodates1);

        viewprop3.setBackground(new java.awt.Color(255, 153, 153));
        viewprop3.setText("View Property");
        viewprop3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewprop3ActionPerformed(evt);
            }
        });

        proname3.setText("Property Name");
        lblDates3.addTab("Accomodation name", proname3);

        prolocation3.setText("Location");
        lblDates3.addTab("Location ", prolocation3);

        prodates3.setText("Date Range");
        lblDates3.addTab("Dates", prodates3);

        viewprop1.setBackground(new java.awt.Color(255, 153, 153));
        viewprop1.setText("View Property");
        viewprop1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewprop1ActionPerformed(evt);
            }
        });

        proname2.setText("Property Name");
        lblDates2.addTab("Accomodation name", proname2);

        prolocation2.setText("Location");
        lblDates2.addTab("Location", prolocation2);

        prodates2.setText("Date Range");
        lblDates2.addTab("Dates", prodates2);

        proname4.setText("Property Name");
        lblDates4.addTab("Accomodation name", proname4);

        prolocation4.setText("Location");
        lblDates4.addTab("Location", prolocation4);

        prodates4.setText("Date Range");
        lblDates4.addTab("Dates", prodates4);

        viewprop4.setBackground(new java.awt.Color(255, 153, 153));
        viewprop4.setText("View Property");
        viewprop4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewprop4ActionPerformed(evt);
            }
        });

        viewprop2.setBackground(new java.awt.Color(255, 153, 153));
        viewprop2.setText("View Property");
        viewprop2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewprop2ActionPerformed(evt);
            }
        });

        pastBooking.setBackground(new java.awt.Color(255, 204, 153));
        pastBooking.setText("Past Booking");
        pastBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pastBookingActionPerformed(evt);
            }
        });

        upcomingBooking.setBackground(new java.awt.Color(255, 204, 153));
        upcomingBooking.setText("Upcoming Booking");

        accountButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        accountButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/User_Icon_Wikipedia_Resized.png"))); // NOI18N
        accountButton.setText("Account");
        accountButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        accountButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        accountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountButtonActionPerformed(evt);
            }
        });

        logOut.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        logOut.setText("Log Out");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        nextPage.setBackground(new java.awt.Color(255, 204, 153));
        nextPage.setText("Next Page");
        nextPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPageActionPerformed(evt);
            }
        });

        previousPage.setBackground(new java.awt.Color(255, 204, 153));
        previousPage.setText("Previous Page");
        previousPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousPageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(hostViewSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(accountButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblDates2, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(viewprop1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblDates1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(viewprop2))
                        .addGap(84, 84, 84)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewprop4)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblDates4, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(viewprop3)
                                    .addComponent(lblDates3, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(homePage, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(137, 137, 137)
                        .addComponent(guestSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pastBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(upcomingBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(previousPage, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(295, 295, 295)
                        .addComponent(pageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nextPage, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 6, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accountButton)
                    .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hostViewSwitch, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(upcomingBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pastBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(homePage, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guestSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(previousPage)
                            .addComponent(nextPage))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pageNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblDates3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDates1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewprop1)
                    .addComponent(viewprop3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDates4, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewprop4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDates2, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewprop2)))
                .addGap(0, 17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fetchUpcomingData(String email) {
        
        previousPage.setEnabled(false);
        nextPage.setEnabled(false);
        
        Date dateToday = new Date(new java.util.Date().getTime());
        
        upcomingList = GuestBookingList.getUpcomingList(email, dateToday);
        
        int n = upcomingList.length;
        
        if (n <= 4){
            removeUpcomingBoxes(4-n);
        } else {
            nextPage.setEnabled(true);
        }
        
        if (n <= 4) {
            
            numberOfPages = 1;
            
        } else if (n%4 == 0) {
            
            numberOfPages = n/4;
            
        } else {
            numberOfPages = (n/4) + 1;
        }
        
        pageNumber.setText("1/" + numberOfPages);
        
        fillUpcomingBoxes(0);
        
    }
    
    
    private void fillUpcomingBoxes(int indexFirstPropOnPage) {

        int maxAmountBoxes = 4;
        
        if (indexFirstPropOnPage + 4 > upcomingList.length){
            maxAmountBoxes = upcomingList.length - indexFirstPropOnPage;
        }
        if (maxAmountBoxes >= 1){
            proname1.setText(upcomingList[indexFirstPropOnPage].getPropertyName());
            prolocation1.setText(upcomingList[indexFirstPropOnPage].getLocation());
            prodates1.setText(upcomingList[indexFirstPropOnPage].getDateRange());
        }
        if (maxAmountBoxes >= 2){
           proname2.setText(upcomingList[indexFirstPropOnPage+1].getPropertyName());
            prolocation2.setText(upcomingList[indexFirstPropOnPage+1].getLocation());
            prodates2.setText(upcomingList[indexFirstPropOnPage+1].getDateRange());
        }
        if (maxAmountBoxes >= 3){
            proname3.setText(upcomingList[indexFirstPropOnPage+2].getPropertyName());
            prolocation3.setText(upcomingList[indexFirstPropOnPage+2].getLocation());
            prodates3.setText(upcomingList[indexFirstPropOnPage+2].getDateRange());
        }
        if (maxAmountBoxes == 4){
            proname4.setText(upcomingList[indexFirstPropOnPage+3].getPropertyName());
            prolocation4.setText(upcomingList[indexFirstPropOnPage+3].getLocation());
            prodates4.setText(upcomingList[indexFirstPropOnPage+3].getDateRange());
        }    
    }
    
    private void fillSearchBoxes(int indexFirstPropOnPage) {

        int maxAmountBoxes = 4;
        
        if (indexFirstPropOnPage + 4 > searchResults.length){
            maxAmountBoxes = searchResults.length - indexFirstPropOnPage;
        }
        if (maxAmountBoxes >= 1){
            proname1.setText(searchResults[indexFirstPropOnPage].getPropertyName());
            prolocation1.setText(searchResults[indexFirstPropOnPage].getLocation());
            prodates1.setText(searchResults[indexFirstPropOnPage].getDateRange());
        }
        if (maxAmountBoxes >= 2){
           proname2.setText(searchResults[indexFirstPropOnPage+1].getPropertyName());
            prolocation2.setText(searchResults[indexFirstPropOnPage+1].getLocation());
            prodates2.setText(searchResults[indexFirstPropOnPage+1].getDateRange());
        }
        if (maxAmountBoxes >= 3){
            proname3.setText(searchResults[indexFirstPropOnPage+2].getPropertyName());
            prolocation3.setText(searchResults[indexFirstPropOnPage+2].getLocation());
            prodates3.setText(searchResults[indexFirstPropOnPage+2].getDateRange());
        }
        if (maxAmountBoxes == 4){
            proname4.setText(searchResults[indexFirstPropOnPage+3].getPropertyName());
            prolocation4.setText(searchResults[indexFirstPropOnPage+3].getLocation());
            prodates4.setText(searchResults[indexFirstPropOnPage+3].getDateRange());
        }    
    }
    
    private void removeUpcomingBoxes(int numBoxesToBeRemoved) {
        
        if (numBoxesToBeRemoved >= 1){
            proname4.setVisible(false);
            prolocation4.setVisible(false);
            prodates4.setVisible(false);
        }
        if (numBoxesToBeRemoved >= 2){
            proname3.setVisible(false);
            prolocation3.setVisible(false);
            prodates3.setVisible(false);
        }
        if (numBoxesToBeRemoved >= 3){
            proname2.setVisible(false);
            prolocation2.setVisible(false);
            prodates2.setVisible(false);
        }
        if (numBoxesToBeRemoved == 4){
            proname1.setVisible(false);
            prolocation1.setVisible(false);
            prodates1.setVisible(false);
        }
        
    }
    
    private void resetUpcomingBoxes() {
        
        proname1.setVisible(true);
        prolocation1.setVisible(true);
        prodates1.setVisible(true);

        proname2.setVisible(true);
        prolocation2.setVisible(true);
        prodates2.setVisible(true);

        proname3.setVisible(true);
        prolocation3.setVisible(true);
        prodates3.setVisible(true);

        proname4.setVisible(true);
        prolocation4.setVisible(true);
        prodates4.setVisible(true);
        
    }                                                 

   
    
    
    private void homePageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homePageActionPerformed

     Guestmain main = new Guestmain(jFrameInstance, email);
     jFrameInstance.changePanelToSpecific(main);
     
    }//GEN-LAST:event_homePageActionPerformed

    private void guestSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guestSearchActionPerformed
        // TODO add your handling code here:
        //Guestsearch guestsearch = new Guestsearch(jFrameInstance, email);
        //jFrameInstance.changePanelToSpecific(guestsearch);
    }//GEN-LAST:event_guestSearchActionPerformed

    private void pastBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pastBookingActionPerformed

        Guestupcomingbooking guestupcomingbooking =new Guestupcomingbooking(jFrameInstance, email);
        jFrameInstance.changePanelToSpecific(guestupcomingbooking);
        
    }//GEN-LAST:event_pastBookingActionPerformed

    private void accountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountButtonActionPerformed
        jFrameInstance.changePanelToSpecific(new User(jFrameInstance, jFrameInstance.getEmail(), false, this));
    }//GEN-LAST:event_accountButtonActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        jFrameInstance.setEmail("");
        jFrameInstance.changePanelToDefault();
    }//GEN-LAST:event_logOutActionPerformed

    private void hostViewSwitchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostViewSwitchActionPerformed
        try (Connection con = DriverManager.getConnection("jdbc:mysql://stusql.dcs.shef.ac.uk/team024", "team024", "c0857903")) {

            PreparedStatement pstmt = con.prepareStatement("SELECT isHost FROM Users WHERE email=?");
            pstmt.setString(1, jFrameInstance.getEmail());
            ResultSet res = pstmt.executeQuery();
            
            if (res.next()){
                boolean isHost = res.getBoolean("isHost");
                
                if (isHost){
                    jFrameInstance.changePanelToSpecific(new HostViewAllProperties(jFrameInstance, jFrameInstance.getEmail()));
                } else {
                    javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/warning_icon_resized.png"));
                    String errorMessage = "Access denied. You are not a Host. To become a host please go to the account page.";
                    javax.swing.JOptionPane.showMessageDialog(null, errorMessage, "Error", javax.swing.JOptionPane.INFORMATION_MESSAGE, icon);
                    
                    hostViewSwitch.setEnabled(false);
                }
            }
            
            res.close();
            pstmt.close();
        }
        catch (Exception ex) {
            ex.printStackTrace();            
            
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/warning_icon_resized.png"));
            String errorMessage = "Connection to database failed. University VPN is required.";
            javax.swing.JOptionPane.showMessageDialog(null, errorMessage, "Error", javax.swing.JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }//GEN-LAST:event_hostViewSwitchActionPerformed

    private void nextPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPageActionPerformed
        if (currentPage == 1){
            previousPage.setEnabled(true);
        }
        ++currentPage;
        if (currentPage == numberOfPages){
            nextPage.setEnabled(false);
        }
        
        int indexFirstUpcomingOnPage = (currentPage-1)*4;
        
        pageNumber.setText(currentPage + "/" + numberOfPages);
        fillUpcomingBoxes(indexFirstUpcomingOnPage);
        resetUpcomingBoxes();
        bookingIndex = indexFirstUpcomingOnPage;
        if (indexFirstUpcomingOnPage + 4 > upcomingList.length){
            removeUpcomingBoxes(indexFirstUpcomingOnPage - upcomingList.length + 4);
        }
    }//GEN-LAST:event_nextPageActionPerformed

    private void previousPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousPageActionPerformed
        if (currentPage == numberOfPages){
            nextPage.setEnabled(true);
        }
        --currentPage;
        if (currentPage == 1){
            previousPage.setEnabled(false);
        }

        int indexFirstUpcomingOnPage = (currentPage-1)*4;
        
        pageNumber.setText(currentPage + "/" + numberOfPages);
        fillUpcomingBoxes(indexFirstUpcomingOnPage);
        resetUpcomingBoxes();
        bookingIndex = indexFirstUpcomingOnPage;
    }//GEN-LAST:event_previousPageActionPerformed

    private void proname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_proname1ActionPerformed

    private void viewprop1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewprop1ActionPerformed
        int propertyId = upcomingList[(currentPage-1)*4].getPropertyId();
        jFrameInstance.changePanelToSpecific(new Property(jFrameInstance, propertyId, jFrameInstance.getEmail(), this));
    }//GEN-LAST:event_viewprop1ActionPerformed

    private void viewprop3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewprop3ActionPerformed
        int propertyId = upcomingList[(currentPage-1)*4 + 2].getPropertyId();
        jFrameInstance.changePanelToSpecific(new Property(jFrameInstance, propertyId, jFrameInstance.getEmail(), this));
    }//GEN-LAST:event_viewprop3ActionPerformed

    private void viewprop2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewprop2ActionPerformed
        int propertyId = upcomingList[(currentPage-1)*4 + 1].getPropertyId();
        jFrameInstance.changePanelToSpecific(new Property(jFrameInstance, propertyId, jFrameInstance.getEmail(), this));
    }//GEN-LAST:event_viewprop2ActionPerformed

    private void viewprop4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewprop4ActionPerformed
        int propertyId = upcomingList[(currentPage-1)*4 + 3].getPropertyId();
        jFrameInstance.changePanelToSpecific(new Property(jFrameInstance, propertyId, jFrameInstance.getEmail(), this));
    }//GEN-LAST:event_viewprop4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accountButton;
    private javax.swing.JButton guestSearch;
    private javax.swing.JButton homePage;
    private javax.swing.JButton hostViewSwitch;
    private javax.swing.JButton jButton4;
    private javax.swing.JTabbedPane lblDates1;
    private javax.swing.JTabbedPane lblDates2;
    private javax.swing.JTabbedPane lblDates3;
    private javax.swing.JTabbedPane lblDates4;
    private javax.swing.JButton logOut;
    private javax.swing.JButton nextPage;
    private javax.swing.JLabel pageNumber;
    private javax.swing.JButton pastBooking;
    private javax.swing.JButton previousPage;
    private javax.swing.JTextField prodates1;
    private javax.swing.JTextField prodates2;
    private javax.swing.JTextField prodates3;
    private javax.swing.JTextField prodates4;
    private javax.swing.JTextField prolocation1;
    private javax.swing.JTextField prolocation2;
    private javax.swing.JTextField prolocation3;
    private javax.swing.JTextField prolocation4;
    private javax.swing.JTextField proname1;
    private javax.swing.JTextField proname2;
    private javax.swing.JTextField proname3;
    private javax.swing.JTextField proname4;
    private javax.swing.JButton upcomingBooking;
    private javax.swing.JButton viewprop1;
    private javax.swing.JButton viewprop2;
    private javax.swing.JButton viewprop3;
    private javax.swing.JButton viewprop4;
    // End of variables declaration//GEN-END:variables
}
