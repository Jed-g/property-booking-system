package com2008.team.project;

import java.sql.*;

public class Review extends javax.swing.JPanel {

    private Main jFrameInstance;
    private ReviewList[] reviewList;
    private int numberOfPages;
    private int currentPage = 1;
    private javax.swing.JPanel parentInstance;
    
    /**
     * Creates new form Review
     */
    public Review(Main jFrameInstance, int propertyId, javax.swing.JPanel parentInstance) {
        initComponents();
        this.jFrameInstance = jFrameInstance;
        this.parentInstance = parentInstance;       
        
        DriverManager.setLoginTimeout(3);
        
        fetchData(propertyId);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        returnButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        panelTitle = new javax.swing.JLabel();
        propertyNameText = new javax.swing.JLabel();
        propertyNameTextField = new javax.swing.JLabel();
        locationTextField = new javax.swing.JLabel();
        locationText = new javax.swing.JLabel();
        averageRatingTextField = new javax.swing.JLabel();
        averageRatingText = new javax.swing.JLabel();
        descriptionText = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        review1Label = new javax.swing.JLabel();
        review1Rating = new javax.swing.JLabel();
        review2Label = new javax.swing.JLabel();
        review2Rating = new javax.swing.JLabel();
        review3Label = new javax.swing.JLabel();
        review3Rating = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        pages = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        review2Desc = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        review3Desc = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        review1Desc = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        descriptionTextField = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(1024, 576));

        returnButton.setBackground(new java.awt.Color(194, 123, 160));
        returnButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        returnButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/back_arrow_resized.png"))); // NOI18N
        returnButton.setText("Return");
        returnButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        returnButton.setIconTextGap(8);
        returnButton.setMaximumSize(new java.awt.Dimension(168, 54));
        returnButton.setMinimumSize(new java.awt.Dimension(168, 54));
        returnButton.setPreferredSize(new java.awt.Dimension(168, 54));
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        panelTitle.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        panelTitle.setText("Reviews");

        propertyNameText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        propertyNameText.setText("Property Name");

        propertyNameTextField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        propertyNameTextField.setText("awaiting DB fetch");

        locationTextField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        locationTextField.setText("awaiting DB fetch");

        locationText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        locationText.setText("Location");

        averageRatingTextField.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        averageRatingTextField.setText("awaiting DB fetch");

        averageRatingText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        averageRatingText.setText("Average Rating");

        descriptionText.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        descriptionText.setText("Description");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

        review1Label.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        review1Label.setText("awaiting DB fetch");

        review1Rating.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        review1Rating.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        review1Rating.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/star_resized.png"))); // NOI18N
        review1Rating.setText("awaiting DB fetch");
        review1Rating.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        review2Label.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        review2Label.setText("awaiting DB fetch");

        review2Rating.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        review2Rating.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        review2Rating.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/star_resized.png"))); // NOI18N
        review2Rating.setText("awaiting DB fetch");
        review2Rating.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        review3Label.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        review3Label.setText("awaiting DB fetch");

        review3Rating.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        review3Rating.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        review3Rating.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/star_resized.png"))); // NOI18N
        review3Rating.setText("awaiting DB fetch");
        review3Rating.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        nextButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        nextButton.setText("Next");
        nextButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nextButton.setEnabled(false);
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        previousButton.setText("Previous");
        previousButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        previousButton.setEnabled(false);
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        pages.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pages.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pages.setText("awaiting DB fetch");

        review2Desc.setEditable(false);
        review2Desc.setColumns(20);
        review2Desc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        review2Desc.setLineWrap(true);
        review2Desc.setRows(4);
        review2Desc.setText("awaiting DB fetch");
        jScrollPane1.setViewportView(review2Desc);

        review3Desc.setEditable(false);
        review3Desc.setColumns(20);
        review3Desc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        review3Desc.setLineWrap(true);
        review3Desc.setRows(4);
        review3Desc.setText("awaiting DB fetch");
        jScrollPane2.setViewportView(review3Desc);

        review1Desc.setEditable(false);
        review1Desc.setColumns(20);
        review1Desc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        review1Desc.setLineWrap(true);
        review1Desc.setRows(4);
        review1Desc.setText("awaiting DB fetch");
        jScrollPane3.setViewportView(review1Desc);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(pages, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(review1Label, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(review1Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(review2Label, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(review2Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(review3Label, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(review3Rating, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(review1Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(review1Rating, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(review2Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(review2Rating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(review3Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(review3Rating))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pages, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nextButton)
                        .addComponent(previousButton)))
                .addContainerGap())
        );

        descriptionTextField.setEditable(false);
        descriptionTextField.setColumns(20);
        descriptionTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        descriptionTextField.setLineWrap(true);
        descriptionTextField.setRows(5);
        descriptionTextField.setText("awaiting DB fetch");
        jScrollPane4.setViewportView(descriptionTextField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descriptionText)
                            .addComponent(locationText)
                            .addComponent(averageRatingText)
                            .addComponent(propertyNameText)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(averageRatingTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                                .addComponent(locationTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(propertyNameTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(propertyNameText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(propertyNameTextField)
                        .addGap(18, 18, 18)
                        .addComponent(locationText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(locationTextField)
                        .addGap(18, 18, 18)
                        .addComponent(averageRatingText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(averageRatingTextField)
                        .addGap(18, 18, 18)
                        .addComponent(descriptionText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        if (parentInstance instanceof HostPreviousBookings){
            ((HostPreviousBookings)parentInstance).childReturnButtonAction();
        }
        if (parentInstance instanceof Property){
            ((Property)parentInstance).childReturnButtonAction();
        }
    }//GEN-LAST:event_returnButtonActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        if (currentPage == 1){
            previousButton.setEnabled(true);
        }
        ++currentPage;
        if (currentPage == numberOfPages){
            nextButton.setEnabled(false);
        }
        
        int indexOfFirstReviewOnPage = (currentPage-1)*3;
        
        pages.setText(currentPage + "/" + numberOfPages);
        fillInReviewBoxes(indexOfFirstReviewOnPage);
        resetReviewSections();
        if (indexOfFirstReviewOnPage + 3 > reviewList.length){
            removeReviewSections(indexOfFirstReviewOnPage - reviewList.length + 3);
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        if (currentPage == numberOfPages){
            nextButton.setEnabled(true);
        }
        --currentPage;
        if (currentPage == 1){
            previousButton.setEnabled(false);
        }

        int indexOfFirstReviewOnPage = (currentPage-1)*3;
        
        pages.setText(currentPage + "/" + numberOfPages);
        fillInReviewBoxes(indexOfFirstReviewOnPage);
        resetReviewSections();
    }//GEN-LAST:event_previousButtonActionPerformed
   
    
    private void fetchData(int propertyId){
        try (Connection con = DriverManager.getConnection("jdbc:mysql://stusql.dcs.shef.ac.uk/team024", "team024", "c0857903")) {
           
            PreparedStatement pstmt = con.prepareStatement("SELECT propertyName, location, description FROM Properties WHERE propertyId = ?;");
            pstmt.setInt(1, propertyId);
            ResultSet res = pstmt.executeQuery();
                        
            if (res.next()) {
                propertyNameTextField.setText(res.getString("propertyName"));
                locationTextField.setText(res.getString("location"));
                descriptionTextField.setText(res.getString("description"));
            }
            
            res.close();
            pstmt.close();
           
            
            reviewList = ReviewList.getList(propertyId);
            
            int n = reviewList.length;
            
            if (n == 0){
                averageRatingTextField.setText("No rating yet.");
            } else {
                float sum = 0;
                for (ReviewList i : reviewList){
                    sum += i.getRating();
                }
                
                averageRatingTextField.setText(String.format("%.1f", (float)sum/n)+"/5");
            }
            
            if (n <= 3){
                removeReviewSections(3-n);
            } else {
                nextButton.setEnabled(true);
            }
            
            fillInReviewBoxes(0);
            numberOfPages = n == 0 ? 1 : (int)Math.ceil((float)n/3);
            pages.setText("1/" + numberOfPages);
        }
        catch (Exception ex) {
            ex.printStackTrace();            
            
            javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/images/warning_icon_resized.png"));
            String errorMessage = "Connection to database failed. University VPN is required.";
            javax.swing.JOptionPane.showMessageDialog(null, errorMessage, "Error", javax.swing.JOptionPane.INFORMATION_MESSAGE, icon);
        }
    }

    private void fillInReviewBoxes(int indexOfFirstReviewOnPage){
        int amountOfBoxesToFillIn = 3;
        if (indexOfFirstReviewOnPage + 3 > reviewList.length){
            amountOfBoxesToFillIn = reviewList.length - indexOfFirstReviewOnPage;
        }
        if (amountOfBoxesToFillIn >= 1){
            review1Desc.setText(reviewList[indexOfFirstReviewOnPage].getReviewDesc());
            review1Label.setText(reviewList[indexOfFirstReviewOnPage].getForename()+" "+
                    reviewList[indexOfFirstReviewOnPage].getLastname().substring(0,1)+".");
            review1Rating.setText(String.format("%.1f", reviewList[indexOfFirstReviewOnPage].getRating()));
        }
        if (amountOfBoxesToFillIn >= 2){
            review2Desc.setText(reviewList[indexOfFirstReviewOnPage+1].getReviewDesc());
            review2Label.setText(reviewList[indexOfFirstReviewOnPage+1].getForename()+" "+
            reviewList[indexOfFirstReviewOnPage+1].getLastname().substring(0,1)+".");
            review2Rating.setText(String.format("%.1f", reviewList[indexOfFirstReviewOnPage+1].getRating()));
        }
        if (amountOfBoxesToFillIn == 3){
            review3Desc.setText(reviewList[indexOfFirstReviewOnPage+2].getReviewDesc());
            review3Label.setText(reviewList[indexOfFirstReviewOnPage+2].getForename()+" "+
            reviewList[indexOfFirstReviewOnPage+2].getLastname().substring(0,1)+".");
            review3Rating.setText(String.format("%.1f", reviewList[indexOfFirstReviewOnPage+2].getRating()));
        }
    }
    
    private void removeReviewSections(int number){
        if (number >= 1){
            review3Desc.setVisible(false);
            review3Label.setVisible(false);
            review3Rating.setVisible(false);
        }
        if (number >= 2){
            review2Desc.setVisible(false);
            review2Label.setVisible(false);
            review2Rating.setVisible(false);
        }
        if (number == 3){
            review1Desc.setVisible(false);
            review1Label.setVisible(false);
            review1Rating.setVisible(false);
        }   
    }
    
    private void resetReviewSections(){
        review1Desc.setVisible(true);
        review1Label.setVisible(true);
        review1Rating.setVisible(true);
        review2Desc.setVisible(true);
        review2Label.setVisible(true);
        review2Rating.setVisible(true);
        review3Desc.setVisible(true);
        review3Label.setVisible(true);
        review3Rating.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel averageRatingText;
    private javax.swing.JLabel averageRatingTextField;
    private javax.swing.JLabel descriptionText;
    private javax.swing.JTextArea descriptionTextField;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel locationText;
    private javax.swing.JLabel locationTextField;
    private javax.swing.JButton nextButton;
    private javax.swing.JLabel pages;
    private javax.swing.JLabel panelTitle;
    private javax.swing.JButton previousButton;
    private javax.swing.JLabel propertyNameText;
    private javax.swing.JLabel propertyNameTextField;
    private javax.swing.JButton returnButton;
    private javax.swing.JTextArea review1Desc;
    private javax.swing.JLabel review1Label;
    private javax.swing.JLabel review1Rating;
    private javax.swing.JTextArea review2Desc;
    private javax.swing.JLabel review2Label;
    private javax.swing.JLabel review2Rating;
    private javax.swing.JTextArea review3Desc;
    private javax.swing.JLabel review3Label;
    private javax.swing.JLabel review3Rating;
    // End of variables declaration//GEN-END:variables
}
